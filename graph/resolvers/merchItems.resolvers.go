package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"fmt"

	"github.com/ut-sama-art-studio/art-market-backend/graph"
	"github.com/ut-sama-art-studio/art-market-backend/graph/model"
)

// CreateMerch is the resolver for the createMerch field.
func (r *mutationResolver) CreateMerch(ctx context.Context, input model.NewMerch) (*model.MerchItem, error) {
	panic(fmt.Errorf("not implemented: CreateMerch - createMerch"))
}

// UpdateMerch is the resolver for the updateMerch field.
func (r *mutationResolver) UpdateMerch(ctx context.Context, input model.UpdateMerch) (*model.MerchItem, error) {
	panic(fmt.Errorf("not implemented: UpdateMerch - updateMerch"))
}

// DeleteMerch is the resolver for the deleteMerch field.
func (r *mutationResolver) DeleteMerch(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteMerch - deleteMerch"))
}

// Merch is the resolver for the merch field.
func (r *queryResolver) Merch(ctx context.Context, id string) (*model.MerchItem, error) {
	panic(fmt.Errorf("not implemented: Merch - merch"))
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
